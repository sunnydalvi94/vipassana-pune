<?php
class Common_model extends CI_Model {
    public function __construct() {
        parent::__construct();
    }
    public function insert_record($tbl_name, $record) {
        return $this->db->insert($tbl_name, $record);
    }
    public function selectDetailsWhr($tblname,$where,$condition)
    {
        $this->db->where($where,$condition);
        $this->db->where('display','Y');
        $query = $this->db->get($tblname);
        if($query->num_rows()== 1)
        {           
            return $query->row();
        }
        else
        {
            return false;
        }           
    }
    public function fetchDataDesc($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('display','Y')->order_by($asc_by_col_name, "DESC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }
   
    public function fetchDataASC($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('display','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }
    public function productCategory($tbl)
    {
        $query= $this->db->query(" SELECT DISTINCT tbl1.name FROM tbl_category as tbl1 left join tbl_product as tbl2 on tbl2.category_id=tbl1.category_id where tbl1.display='Y' order by tbl2.name DESC");
       
        if($query->num_rows() > 0)
        {
            return $query->result();
        }
        else
        {
            return false;
        }   
    }
     public function alljoin2tbl($tbl1,$tbl2,$where)
    {
        $query=$this->db->query("SELECT * from $tbl1 tbl1 left join $tbl2 tbl2 on tbl1.$where=tbl2.$where where  tbl1.display='Y' AND tbl2.display='Y'");
        if($query->num_rows() > 0)
        {
            foreach ($query->result() as $row)
            {
                $tbl_data[]=$row;
            }
            return $tbl_data;
        }
        else
        {
            return false;
        }
    }
     public function alljoin2tbl_whr($tbl1,$tbl2,$where,$condition,$id)
    {
        $query=$this->db->query("SELECT * from $tbl1 tbl1 left join $tbl2 tbl2 on tbl1.$where=tbl2.$where where tbl1.$condition=$id AND tbl1.display='Y' AND tbl2.display='Y'");
        if($query->num_rows() > 0)
        {
            foreach ($query->result() as $row)
            {
                $tbl_data[]=$row;
            }
            return $tbl_data;
        }
        else
        {
            return false;
        }
    }
    public function addData($tablename,$data) 
    {
        $query=$this->db->insert($tablename,$data); 
        $user_id= $this->db->insert_id(); 
        if($query) {
            return $user_id; 
        } 
        else {
            return false; 
        } 
    }
    public function singlejoin2tbl($tbl1,$tbl2,$where,$condition,$id)
    {
        $query=$this->db->query("SELECT * from $tbl1 tbl1 left join $tbl2 tbl2 on tbl1.$where=tbl2.$where Where tbl1.display='Y'");
        if($query->num_rows()==1)
        {
            return $query->row();
        }
        else
        {
            return false;
        }
    }

    public function customalljoing2tbl()
    {
        $query = $this->db->query("SELECT tai.*,ta.album_name FROM tbl_album_image tai LEFT JOIN tbl_album ta ON tai.album_id=ta.album_id where tai.display='Y'");
        if($query->num_rows() > 0)
        {
            return $query->result();
        }
        else
        {
            return false;
        }
    }
    
    public function lastinsert($table_name,$where)
    {
        $query=$this->db->query("SELECT $where FROM $table_name ORDER BY $where DESC LIMIT 1");
        if($query->num_rows()>0) 
        {
           foreach ($query->result() as $key) 
            {
                $data=$key; 
            } 
            return $data; 
        } 
        else 
        {
            return false; 
        } 
    }
     public function lastupdate($activation_code)
    {
        $query=$this->db->query("SELECT user_id FROM tbl_user  where activation_code = $activation_code");
        if($query->num_rows()>0) 
        {
           foreach ($query->result() as $key) 
            {
                $data=$key; 
            } 
            return $data; 
        } 
        else 
        {
            return false; 
        } 
    }

     public function childrenSliderAllJoing2Tbl()
    {
        $query = $this->db->query("SELECT tcs.*,tst.slider_type FROM tbl_children_slider tcs LEFT JOIN tbl_slider_type tst ON tcs.slider_type_id=tst.slider_type_id where tcs.display='Y'");
        if($query->num_rows() > 0)
        {
            return $query->result();
        }
        else
        {
            return false;
        }
    }
     public function childrenSliderFilters($id)
    {
        $query = $this->db->query("SELECT tcs.*,tst.slider_type FROM tbl_children_slider tcs LEFT JOIN tbl_slider_type tst ON tcs.slider_type_id=tst.slider_type_id where tcs.slider_type_id =$id && tcs.display='Y'");
        if($query->num_rows() > 0)
        {
            return $query->result();
        }
        else
        {
            return false;
        }
    }

      public function fetchDataHomeSlider($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('slider_type_id','1')->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }
      public function fetchDataFeedback1Asc($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('slider_type_id','2')->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }
      public function fetchDataFeedback2Asc($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('slider_type_id','3')->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }

       public function fetchDataPunnaGalleryAsc()
    {
        $query = $this->db->query("SELECT tai.*,ta.album_name FROM tbl_album_image tai LEFT JOIN tbl_album ta ON tai.album_id=ta.album_id where tai.in_use='Y' && tai.display='Y' && tai.album_id='1'  ");
        if($query->num_rows() > 0 )
        {
            return $query->result();
        }
        else
        {
            return false;
        }
    }



     public function fetchDataAnandaGalleryAsc()
    {       
       $query = $this->db->query("SELECT tai.*,ta.album_name FROM tbl_album_image tai LEFT JOIN tbl_album ta ON tai.album_id=ta.album_id where tai.in_use='Y' && tai.display='Y' && tai.album_id='2' ");
        if($query->num_rows() > 0)
        {
            return $query->result();
        }
        else
        {
            return false;
        }
    }
     public function fetchDataDhammaPunnaCenterAsc($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('slider_type_id','4')->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }

       public function fetchDataDhammaAnandaCenterAsc($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('slider_type_id','5')->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }
      public function fetchDataSiteASC($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }

    public function faqFetchDataASC($table_name, $sequence)
    {       
        $this->db->select('*')->from($table_name)->where('display','Y')->order_by($sequence, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }
      public function fetchFaqDataSiteASC($table_name, $asc_by_col_name)
    {       
        $this->db->select('*')->from($table_name)->where('display','Y')->where('in_use','Y')->order_by($asc_by_col_name, "ASC");  
        $qry = $this->db->get();

        if($qry->num_rows()>0)
        {
            return $qry->result();
        }
        else
        {
            return false;
        }
    }


}?>